/**	@page faq Frequently Asked Questions
		
		<div id="faq_get_started">
			<h2> Q: How can I get started? </h2>
			Firstly, you should download and install the Window Add-on. You can download the add-on here: LINK
			<br><br>
			After that, you can start reading this short tutorials to introduce yourself to the basic concepts of the library: @ref index .
		</div>
		
		<div id="faq_resources_not_found">
			<h2> Q: I tried to run some code and it crashed with message "Assertion failed: bitmap, file .../bitmap.c". What can I do? </h2>
			The crashes with messages with the pattern "Assertion failed: ..." are usually caused by missing files that your program or the Window itself need but were not supplied. In this particular case, you're getting this error because you forgot to add the @a resources folder into the running directory of your executable. 
			<br><br>
			You will usually get this type of errors when you try to load an Image or a Font with a wrong file path.
		</div>
		
		<div id="faq_blackscreen">
			<h2> Q: When I maximize my window the content turns black. Why? </h2>
			Normally when a window is minimized its graphic state is not preserved to save some space in memory. This is why you see a black screen. But this doesn't mean the state is lost, it can be preserved in your program's state. So normally, using Allegro, you would refresh the display (flip the back and front buffers) and your content would be shown again.
			<br><br>
			With the window, it's exactly the same. You can call Window::update() method to restore the window state before minimizing, but knowing when your Window has been minimized and maximized requires you to know about the @ref events and how it works. Fortunately, I have a better solution for you: the Window can <strong>automatically</strong> restore its state when maximized.
			<br><br>
			You can enable this feature using the method Window::enableAutoRefresh() and disable it with Window::disableAutoRefresh(). It's as simple as that. If you want to ensure that this feature is enabled before your users minimize the window, I recommend you to call it just right after you've declared your Window.
			This feature has one caveat: your Window has to be waiting for some type of @ref event_handling interaction to be able to listen to minimization and maximization events. So using Window::rest() will make your application unable to use this functionality even if it is enabled.
		</div>
*/