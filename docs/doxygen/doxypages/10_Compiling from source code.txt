/**
@page compilation_guides Compiling from source code

	@subpage compile_windowaddon_windows
	@subpage compile_windowaddon_linux

	@page compile_windowaddon_windows Compiling Window Add-on for Windows
	
	<b>Prerequisites</b>: Allegro (recommended version: 5.2.4) installed on your MinGW installation.
	<br><br>
	The objective of this tutorial is to teach you how to create both <i>windowAddon.dll</i> and <i>windowAddon.a</i> files needed to install the add-on to your MinGW installation. We will be using Code::Blocks to generate them.
	<br><br>
	Follow this steps in order to compile windowAddon.dll from the source code:
	<ol>
		<li>
			Make sure that you set Code::Blocks MinGW path to be the MinGW installation where you want to install the Window Add-on. Go to <i>Settings &rarr Compiler &rarr Toolchain executables</i> to check that out.
			@image html toolchain_executables.png
		</li>
		
		<li>
			Go to <i>File &rarr New &rarr Project</i> and create a <i>Dynamic Link Library</i> Project. Choose the name and path you prefer, but you have to remember it. In my case the name will be "WindowAddon1.1".
			@image html dll_project.png
		</li>
		
		<li>
			Make a copy of the Window Add-on sources into the root of this new project and put it in a directory called <i>windowAddon</i>. You can not choose this name, make sure you type it right.
			@image html windows_windowaddon_copysource.png
		</li>
		
		<li>
			Now replace your main.h and main.cpp with this samples:
			<br><br>
			<i>main.h</i>
			@include dll_main.h
			<i>main.cpp</i>
			@include dll_main.cpp
			<br>
			In more detail: First of all, you have to include the headers that you want to be accessible when using the library. You also have to delete the sample function that Code::Blocks creates with the project. The provided samples are the ones intended to be used, but feel free to modify anything you want in order to fit your needs.
		</li>
		
		<li>
		nosing jere
		</li>
	</ol>
	
	@page compile_windowaddon_linux Compiling Window Add-on for Linux
*/